security:
    password_hashers:
        App\Context\User\Domain\User:
            algorithm: auto
    providers:
        user_provider:
            id: App\Shared\Infrastructure\Security\Core\User\UserProvider
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                username_path: email

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    access_control:
        - { path: ^/.*/health-check,        roles: PUBLIC_ACCESS }
        - { path: ^/api/login,              roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/users/register,      roles: PUBLIC_ACCESS }
        - { path: ^/api/v1/users/activate,      roles: PUBLIC_ACCESS }
        - { path: ^/api,                    roles: '%env(API_ACCESS_ROLE)%' }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
