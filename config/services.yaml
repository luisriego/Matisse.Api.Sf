parameters:
    
imports:
    - { resource: '../src/Context/Account/account.yaml' }
    - { resource: '../src/Context/ResidentUnit/resident_unit.yaml'}
    - { resource: '../src/Context/Expense/expense.yaml'}
    - { resource: '../src/Context/Income/Income.yaml'}
    - { resource: '../src/Context/EventStore/event.yaml'}
    # - { resource: '../src/Context/User/user.yaml' }

services:
    _defaults:
        autowire: true      
        autoconfigure: true

    App\Context\User\Infrastructure\Http\Controller\:
        public: true
        resource: '../src/Context/User/Infrastructure/Http/Controller/'
        tags: ['controller.service_arguments']

    App\Context\:
        resource: '../src/Context/'
        exclude:
            - '../src/Context/*/Domain/Entity/'
            - '../src/Context/*/Infrastructure/Persistence/Entity/'
            - '../src/Context/*/Infrastructure/Http/Controller/'

    App\Shared\:
        resource: '../src/Shared/'
        exclude:
            - '../src/Shared/Domain/Entity/'
            - '../src/Shared/Infrastructure/Persistence/Entity/'

    # Event Listeners used to transform the exception into a JSON response
    App\Shared\Infrastructure\JsonTransformerExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: 100 }

    App\Shared\Infrastructure\RequestArgumentResolver:
        tags:
            - { name: controller.argument_value_resolver, priority: 50 }

    _instanceof:
        App\Shared\Domain\Event\EventSubscriber:
            tags: [ 'app.event_subscriber' ]

    App\Shared\Domain\Event\EventBus:
        alias: App\Shared\Infrastructure\InMemorySymfonyEventBus

    App\Shared\Infrastructure\InMemorySymfonyEventBus:
        arguments:
            $subscribers: !tagged_iterator app.event_subscriber
